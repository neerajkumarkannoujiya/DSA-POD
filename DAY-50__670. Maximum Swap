You are given an integer num. You can swap two digits at most once to get the maximum valued number.

Return the maximum valued number you can get.

 

Example 1:

Input: num = 2736
Output: 7236
Explanation: Swap the number 2 and the number 7.
Example 2:

Input: num = 9973
Output: 9973
Explanation: No swap.
 

Constraints:

0 <= num <= 108











********************************************************************************************************************************************************************











class Solution {
    public int maximumSwap(int num) {
        int lastocc[]=new int[10];
        char arr[] = Integer.toString(num).toCharArray();
        int n= arr.length;
        for(int i=0;i<n;i++){
            lastocc[arr[i]-'0']=i;
        }
        for(int i=0;i<n;i++){
            char val = arr[i];
            for(char j='9';j>val;j--){
                if(i<lastocc[j-'0']){
                    arr[i]=j;
                    arr[lastocc[j-'0']]=val;
                    return Integer.parseInt(new String(arr));
                }
            }
        }
        return Integer.parseInt(new String(arr));
        
    }
}
